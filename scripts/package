set -eu

. "$(dirname "${BASH_SOURCE[0]}")/setup"

if (( $# < 1 )) || [[ "${1:-}" == "help" ]]; then
  echo "package TARGET"
  echo ""
  echo "Packages all relevant files into a directory named '${PKG_PREFIX}/<version>'"
  echo "at TARGET. If TARGET is set to @local, the local Typst package directory"
  echo "will be used so that the package gets installed for local use."
  echo "The version is read from 'typst.toml' in the project root."
  echo ""
  echo "Local package prefix: $DATA_DIR/typst/package/local"
  exit 1
fi

TARGET="$(resolve_target "${1:?Missing target path or @local}")"
echo "Install dir: $TARGET"

# ignore rules
ignores=()
tmpfile_ignores="$(mktemp)"
grep '[^[:blank:]]' .typstignore > "$tmpfile_ignores"
while IFS= read -r line; do
	[[ "$line" =~ ^# ]] && continue
	[[ -z "$line" ]] && continue
	ignores+=("$line")
done < "$tmpfile_ignores"
rm -f "$tmpfile_ignores"

# recursively print all files that are not excluded via .typstignore
function enumerate {
	local root="$1"
	if [[ -f "$root" ]]; then
		echo "$root"
	else

			local files=()
			local tmpfile
			tmpfile="$(mktemp)"
			find "$root" \
				-mindepth 1 -maxdepth 1 \
				-not -name .git \
				-not -name .typstignore > "$tmpfile"
			while IFS= read -r line; do
				files+=("$line")
			done < "$tmpfile"
			rm -f "$tmpfile"
			# declare -p files >&2

		local f
		for f in "${files[@]}"; do
			local include
			include=1

			local ignore
			for ignore in "${ignores[@]}"; do
				if [[ "$ignore" =~ ^! ]]; then
					ignore="${ignore:1}"
					if [[ "$f" == ./$ignore ]]; then
						# echo "\"$f\" matched \"!$ignore\"" >&2
						include=1
					fi
				elif [[ "$f" == ./$ignore ]]; then
					# echo "\"$f\" matched \"$ignore\"" >&2
					include=0
				fi
			done
			if [[ "$include" == 1 ]]; then
				enumerate "$f"
			fi
		done
	fi
}


# List of all files that get packaged
# Compatible bash/zsh : lecture via fichier temporaire
files=()
tmpfile_files="$(mktemp)"
enumerate "." > "$tmpfile_files"
while IFS= read -r line; do
	files+=("$line")
done < "$tmpfile_files"
rm -f "$tmpfile_files"
# declare -p files >&2

TMP="$(mktemp -d)"

for f in "${files[@]}"; do
  mkdir -p "$TMP/$(dirname "$f")" 2>/dev/null
  cp -r "$SOURCE/$f" "$TMP/$f"
done

TARGET="${TARGET:?}/${PKG_PREFIX:?}/${VERSION:?}"
echo "Packaged to: $TARGET"
if rm -r "${TARGET:?}" 2>/dev/null; then
  echo "Overwriting existing version."
fi
mkdir -p "$TARGET"

# include hidden files by setting dotglob
shopt -s dotglob
mv "$TMP"/* "$TARGET"